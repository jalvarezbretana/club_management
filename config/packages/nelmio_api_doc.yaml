nelmio_api_doc:
  documentation:
    info:
      title: club_management
      description: This is an app that manages a league with its clubs, players and trainers!
      version: beta
    components:
      schemas:
        Club:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Marvel
            email:
              type: string
              example: marvel@email.com
            total_budget:
              type: integer
              example: 30000
            remaining_budget:
              type: integer
              example: 25500
            phone:
              type: integer
              example: 999999999
            players:
              type: array
              items:
                $ref: '#/components/schemas/PlayerClubData'
            trainers:
              type: array
              items:
                $ref: '#/components/schemas/TrainerClubData'

        Player:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Peter
            surname:
              type: string
              example: Parker
            email:
              type: string
              example: spiderman@email.com
            dni:
              type: string
              example: 19621962S
            salary:
              type: integer
              example: 2000
            phone:
              type: integer
              example: 196219621
            club_id:
              type: integer
              example: 1
            club:
              type: string
              example: Marvel

        Trainer:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: J. Jonah
            surname:
              type: string
              example: Jameson
            email:
              type: string
              example: jjjameson@email.com
            dni:
              type: string
              example: 19631963J
            salary:
              type: integer
              example: 2500
            phone:
              type: integer
              example: 196319631
            club_id:
              type: integer
              example: 1
            club:
              type: string
              example: Marvel

        PlayerClubData:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Peter
            salary:
              type: integer
              example: 2000

        TrainerClubData:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: J. Jonah
            salary:
              type: integer
              example: 2500

        PlayerName:
          type: object
          properties:
            name:
              type: string
              example: Peter

    paths:
      /club:
        get:
          summary: Returns a list with all clubs with each players and trainers.
          tags:
            - Club CRUD
          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      CLUBS:
                        type: array
                        items:
                          $ref: '#/components/schemas/Club'
            default:
              description: Unexpected error

        post:
          summary: Creates a club.
          tags:
            - Club CRUD
          parameters:
            - name: name
              in: path
              description: Club's name
              required: true
              schema:
                type: string
            - name: email
              in: path
              description: Email
              required: true
              schema:
                type: string
            - name: budget
              in: path
              description: Budget
              required: true
              schema:
                type: integer
            - name: phone
              in: path
              description: Phone
              required: true
              schema:
                type: integer
          responses:
            '200': #status code
              description: OK
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            default:
              description: Unexpected error

      /club/{id}:
        get:
          summary: Returns a list of a club with its total and remaining budget.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A club's id.
              schema:
                type: integer
                minimum: 1
          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Marvel
                      total_budget:
                        type: integer
                        example: 30000
                      remaining_budget:
                        type: integer
                        example: 20000
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error

        put:
          summary: Updates a club.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              description: A club's id
              required: true
              schema:
                type: integer
                minimum: 1

            - name: name
              in: path
              description: New club's name
              required: true
              schema:
                type: string
            - name: email
              in: path
              description: New email
              required: true
              schema:
                type: string
            - name: budget
              in: path
              description: New budget
              required: true
              schema:
                type: integer
            - name: phone
              in: path
              description: New phone
              required: true
              schema:
                type: integer
                minimum: 1

          responses:
            '200': #status code
              description: Club updated successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error

        delete:
          summary: Deletes a club.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A club's id.
              schema:
                type: integer
                minimum: 1

          responses:
            '200': #status code
              description: Club deleted successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error

        patch:
          summary: Updates a club's budget.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A club's id.
              schema:
                type: integer
                minimum: 1

            - name: budget
              in: path
              required: true
              description: New budget
          responses:
            '200': #status code
              description: Club's budget updated successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error

      /club/{id}/player:
        get:
          summary: Returns a list of a club with its players listed by name and with pagination.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A club's id.
              schema:
                type: integer
                minimum: 1

          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        club:
                          type: string
                          example: 'Marvel'
                        players:
                          type: array
                          items:
                            $ref: '#/components/schemas/PlayerName'
                        page:
                          type: integer
                          example: 1
                        total_players:
                          type: integer
                          example: 1

        post:
          summary: Creates a player in a club.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A club's id.
              schema:
                type: integer
                minimum: 1
            - name: name
              in: path
              required: true
              description: A player's name.
              schema:
                type: string
            - name: surname
              in: path
              required: true
              description: A player's surname.
              schema:
                type: string
            - name: dni
              in: path
              required: true
              description: A player's DNI.
              schema:
                type: string
            - name: salary
              in: path
              required: true
              description: A player's salary.
              schema:
                type: integer
            - name: phone
              in: path
              required: true
              description: A player's phone.
              schema:
                type: integer
          responses:
            '200': #status code
              description: Player created successfully
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error

      /club/{id}/trainer:
        post:
          summary: Creates a trainer in a club.
          tags:
            - Club CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A club's id.
              schema:
                type: integer
                minimum: 1
            - name: name
              in: path
              required: true
              description: A trainer's name.
              schema:
                type: string
            - name: surname
              in: path
              required: true
              description: A trainer's surname.
              schema:
                type: string
            - name: dni
              in: path
              required: true
              description: A trainer's DNI.
              schema:
                type: string
            - name: salary
              in: path
              required: true
              description: A trainer's salary.
              schema:
                type: integer
            - name: phone
              in: path
              required: true
              description: A trainer's phone.
              schema:
                type: integer
          responses:
            '200': #status code
              description: Trainer created successfully
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error

      /player:
        get:
          summary: Returns a list with all players.
          tags:
            - Player CRUD
          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      PLAYERS:
                        type: array
                        items:
                          $ref: '#/components/schemas/Player'

            default:
              description: Unexpected error

        post:
          summary: Creates a player.
          tags:
            - Player CRUD
          parameters:
            - name: name
              in: path
              required: true
              description: A player's name.
              schema:
                type: string
            - name: surname
              in: path
              required: true
              description: A player's surname.
              schema:
                type: string
            - name: dni
              in: path
              required: true
              description: A player's DNI.
              schema:
                type: string
            - name: salary
              in: path
              required: true
              description: A player's salary.
              schema:
                type: integer
            - name: phone
              in: path
              required: true
              description: A player's phone.
              schema:
                type: integer
          responses:
            '200': #status code
              description: OK
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            default:
              description: Unexpected error

      /player/{id}:
        get:
          summary: Returns a list with a player's details.
          tags:
            - Player CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A player's id.
              schema:
                type: integer
                minimum: 1
          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Player'

            '400':
              description: Bad Request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error
        put:
          summary: Updates a player.
          tags:
            - Player CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A player's id.
              schema:
                type: integer
                minimum: 1
            - name: name
              in: path
              required: true
              description: New player's name.
              schema:
                type: string
            - name: surname
              in: path
              required: true
              description: New player's surname.
              schema:
                type: string
            - name: dni
              in: path
              required: true
              description: New player's DNI.
              schema:
                type: string
            - name: salary
              in: path
              required: true
              description: New player's salary.
              schema:
                type: integer
            - name: phone
              in: path
              required: true
              description: New player's phone.
              schema:
                type: integer

          responses:
            '200': #status code
              description: Player updated successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error
        delete:
          summary: Deletes a player.
          tags:
            - Player CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A player's id.
              schema:
                type: integer
                minimum: 1

          responses:
            '200': #status code
              description: Player deleted successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error
      /trainer:
        get:
          summary: Returns a list with all trainers.
          tags:
            - Trainer CRUD
          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      TRAINERS:
                        type: array
                        items:
                          $ref: '#/components/schemas/Trainer'

            default:
              description: Unexpected error
        post:
          summary: Creates a trainer.
          tags:
            - Trainer CRUD
          parameters:
            - name: name
              in: path
              required: true
              description: A trainer's name.
              schema:
                type: string
            - name: surname
              in: path
              required: true
              description: A trainer's surname.
              schema:
                type: string
            - name: dni
              in: path
              required: true
              description: A trainer's DNI.
              schema:
                type: string
            - name: salary
              in: path
              required: true
              description: A trainer's salary.
              schema:
                type: integer
            - name: phone
              in: path
              required: true
              description: A trainer's phone.
              schema:
                type: integer
          responses:
            '200': #status code
              description: OK
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            default:
              description: Unexpected error
      /trainer/{id}:
        get:
          summary: Returns a list with a trainer's details.
          tags:
            - Trainer CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A trainer's id.
              schema:
                type: integer
                minimum: 1
          responses:
            '200': #status code
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Trainer'

            '400':
              description: Bad Request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error
        put:
          summary: Updates a trainer.
          tags:
            - Trainer CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A trainer's id.
              schema:
                type: integer
                minimum: 1
            - name: name
              in: path
              required: true
              description: New trainer's name.
              schema:
                type: string
            - name: surname
              in: path
              required: true
              description: New trainer's surname.
              schema:
                type: string
            - name: dni
              in: path
              required: true
              description: New trainer's DNI.
              schema:
                type: string
            - name: salary
              in: path
              required: true
              description: New trainer's salary.
              schema:
                type: integer
            - name: phone
              in: path
              required: true
              description: New trainer's phone.
              schema:
                type: integer

          responses:
            '200': #status code
              description: Player updated successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error
        delete:
          summary: Deletes a trainer.
          tags:
            - Trainer CRUD
          parameters:
            - name: id
              in: path
              required: true
              description: A trainer's id.
              schema:
                type: integer
                minimum: 1

          responses:
            '200': #status code
              description: Player deleted successfully.
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          example: Form not send
            '404':
              description: Not found
            default:
              description: Unexpected error
  areas: # to filter documented areas
    path_patterns:
      - ^/api(?!/doc$) # Accepts routes under /api except /api/doc
